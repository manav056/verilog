$date
	Wed Jun 12 19:23:10 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_tb $end
$var wire 1 ! V $end
$var wire 1 " ZR $end
$var wire 16 # Z [15:0] $end
$var wire 1 $ S $end
$var wire 1 % P $end
$var wire 1 & CY $end
$var reg 16 ' X [15:0] $end
$var reg 16 ( Y [15:0] $end
$scope module DUT $end
$var wire 16 ) X [15:0] $end
$var wire 16 * Y [15:0] $end
$var wire 1 ! overflow $end
$var wire 1 + overlfow $end
$var wire 1 " zero $end
$var wire 1 $ sign $end
$var wire 1 % parity $end
$var wire 1 & carry $end
$var wire 16 , Z [15:0] $end
$scope module A0 $end
$var wire 1 - cin $end
$var wire 4 . x [3:0] $end
$var wire 4 / y [3:0] $end
$var wire 4 0 s [3:0] $end
$var wire 1 1 cout $end
$scope module f1 $end
$var wire 1 - cin $end
$var wire 1 2 x $end
$var wire 1 3 y $end
$var wire 1 4 sum $end
$var wire 1 5 cout $end
$upscope $end
$scope module f2 $end
$var wire 1 5 cin $end
$var wire 1 6 x $end
$var wire 1 7 y $end
$var wire 1 8 sum $end
$var wire 1 9 cout $end
$upscope $end
$scope module f3 $end
$var wire 1 9 cin $end
$var wire 1 : x $end
$var wire 1 ; y $end
$var wire 1 < sum $end
$var wire 1 = cout $end
$upscope $end
$scope module f4 $end
$var wire 1 = cin $end
$var wire 1 > x $end
$var wire 1 ? y $end
$var wire 1 @ sum $end
$var wire 1 1 cout $end
$upscope $end
$upscope $end
$scope module A1 $end
$var wire 1 1 cin $end
$var wire 4 A x [3:0] $end
$var wire 4 B y [3:0] $end
$var wire 4 C s [3:0] $end
$var wire 1 D cout $end
$scope module f1 $end
$var wire 1 1 cin $end
$var wire 1 E x $end
$var wire 1 F y $end
$var wire 1 G sum $end
$var wire 1 H cout $end
$upscope $end
$scope module f2 $end
$var wire 1 H cin $end
$var wire 1 I x $end
$var wire 1 J y $end
$var wire 1 K sum $end
$var wire 1 L cout $end
$upscope $end
$scope module f3 $end
$var wire 1 L cin $end
$var wire 1 M x $end
$var wire 1 N y $end
$var wire 1 O sum $end
$var wire 1 P cout $end
$upscope $end
$scope module f4 $end
$var wire 1 P cin $end
$var wire 1 Q x $end
$var wire 1 R y $end
$var wire 1 S sum $end
$var wire 1 D cout $end
$upscope $end
$upscope $end
$scope module A2 $end
$var wire 1 D cin $end
$var wire 4 T x [3:0] $end
$var wire 4 U y [3:0] $end
$var wire 4 V s [3:0] $end
$var wire 1 W cout $end
$scope module f1 $end
$var wire 1 D cin $end
$var wire 1 X x $end
$var wire 1 Y y $end
$var wire 1 Z sum $end
$var wire 1 [ cout $end
$upscope $end
$scope module f2 $end
$var wire 1 [ cin $end
$var wire 1 \ x $end
$var wire 1 ] y $end
$var wire 1 ^ sum $end
$var wire 1 _ cout $end
$upscope $end
$scope module f3 $end
$var wire 1 _ cin $end
$var wire 1 ` x $end
$var wire 1 a y $end
$var wire 1 b sum $end
$var wire 1 c cout $end
$upscope $end
$scope module f4 $end
$var wire 1 c cin $end
$var wire 1 d x $end
$var wire 1 e y $end
$var wire 1 f sum $end
$var wire 1 W cout $end
$upscope $end
$upscope $end
$scope module A3 $end
$var wire 1 W cin $end
$var wire 4 g x [3:0] $end
$var wire 4 h y [3:0] $end
$var wire 4 i s [3:0] $end
$var wire 1 & cout $end
$scope module f1 $end
$var wire 1 W cin $end
$var wire 1 j x $end
$var wire 1 k y $end
$var wire 1 l sum $end
$var wire 1 m cout $end
$upscope $end
$scope module f2 $end
$var wire 1 m cin $end
$var wire 1 n x $end
$var wire 1 o y $end
$var wire 1 p sum $end
$var wire 1 q cout $end
$upscope $end
$scope module f3 $end
$var wire 1 q cin $end
$var wire 1 r x $end
$var wire 1 s y $end
$var wire 1 t sum $end
$var wire 1 u cout $end
$upscope $end
$scope module f4 $end
$var wire 1 u cin $end
$var wire 1 v x $end
$var wire 1 w y $end
$var wire 1 x sum $end
$var wire 1 & cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
bx i
bx h
bx g
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
bx V
bx U
bx T
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
bx C
bx B
bx A
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
bx 0
bx /
bx .
0-
bx ,
x+
bx *
bx )
bx (
bx '
x&
x%
x$
bx #
x"
z!
$end
#5
1+
0$
1%
0x
1&
0t
0u
0p
0q
b0 i
0l
0m
1f
0W
1b
0c
1^
0_
b1111 V
1Z
0[
1S
0D
1O
0P
1K
0L
b1111 C
1G
0H
1@
01
1<
0=
18
09
0"
b111111111111 #
b111111111111 ,
b1111 0
14
05
03
07
0;
0?
0F
0J
0N
0R
0Y
0]
0a
0e
0k
0o
0s
1w
12
16
1:
1>
1E
1I
1M
1Q
1X
1\
1`
1d
0j
0n
0r
1v
b0 /
b0 B
b0 U
b1000 h
b1111 .
b1111 A
b1111 T
b1000 g
b1000000000000000 (
b1000000000000000 *
b1000111111111111 '
b1000111111111111 )
#10
0+
0<
b11 0
0@
0G
0K
0O
b0 C
0S
0Z
0^
0b
1%
b11 #
b11 ,
b0 V
0f
0&
17
0w
06
0:
0>
0E
0I
0M
0Q
0X
0\
0`
0d
0v
b10 /
b0 h
b1 .
b0 A
b0 T
b0 g
b10 (
b10 *
b1 '
b1 )
#15
1+
1"
08
1&
1%
b0 #
b0 ,
b0 0
04
07
1w
02
1v
b0 /
b1000 h
b0 .
b1000 g
b1000000000000000 (
b1000000000000000 *
b1000000000000000 '
b1000000000000000 )
#20
